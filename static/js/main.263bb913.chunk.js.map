{"version":3,"sources":["components/Country/Country.js","components/CountryList/CountryList.js","SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","stats","className","src","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","countries","fetch","resp","json","this","a","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"iVAGe,SAASA,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAChC,OACE,sBAAKC,UAAU,UAAf,UACE,qBACEC,IAAG,sCAAiCF,EAAMG,YAAvC,gBACHC,IAAKJ,EAAMG,cAEb,6BAAKH,EAAMD,UACX,sBAAKE,UAAU,WAAf,UACE,+CAAgBD,EAAMK,UACtB,kDAAmBL,EAAMM,aACzB,+CAAgBN,EAAMO,UACtB,kDAAmBP,EAAMQ,mB,MCXlB,SAASC,EAAT,GAAiC,IAAVT,EAAS,EAATA,MACpC,OACE,qBAAKC,UAAU,cAAf,SACGD,EAAMU,KAAI,SAACC,GAAD,OACT,cAACZ,EAAD,CAAmCC,MAAOW,GAA5BA,EAAQR,kB,MCLf,SAASS,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACE,uBACEC,KAAK,SACLd,UAAU,SACVY,YAAaA,EACbG,SAAUF,I,UCJKG,E,kDACnB,aAAe,IAAD,8BACZ,gBA2BFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA1B1D,EAAKC,MAAQ,CACXC,UAAW,GACXxB,MAAO,GACPoB,YAAa,IALH,E,yMAUOK,MAAM,wC,cAAnBC,E,gBACkBA,EAAKC,O,OAAvBH,E,OACNI,KAAKT,SAAS,CAAEK,cAChBI,KAAKL,MAAMC,UAAUd,IAArB,uCAAyB,WAAOC,GAAP,iBAAAkB,EAAA,sEACJJ,MAAM,4CAAD,OACsBd,EAAQmB,OAF/B,cACjBJ,EADiB,gBAIJA,EAAKC,OAJD,QAIjBI,EAJiB,QAKdC,QACP,EAAKb,UAAS,SAACc,GAAD,MAAgB,CAC5BjC,MAAOiC,EAAUjC,MAAMkC,OAAhB,2BACFH,EAAKA,EAAKC,OAAS,IADjB,IAEL7B,YAAaQ,EAAQwB,YATJ,2CAAzB,kCAAAP,KAAA,gB,qIAiBQ,IAAD,EACwBA,KAAKL,MAA5BvB,EADD,EACCA,MAAOoB,EADR,EACQA,YACTgB,EAAoBpC,EAAMqC,QAAO,SAAC1B,GAAD,OACrCA,EAAQZ,QAAQuC,cAAcC,SAASnB,EAAYoB,wBAErD,OACE,sBAAKvC,UAAU,MAAf,UACE,uDACA,cAACW,EAAD,CACEC,YAAY,yBACZC,aAAcc,KAAKd,eAErB,cAACL,EAAD,CAAaT,MAAOoC,W,GA3CKK,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,iBAAxB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.263bb913.chunk.js","sourcesContent":["import React from 'react';\r\nimport './country.css';\r\n\r\nexport default function Country({ stats }) {\r\n  return (\r\n    <div className=\"country\">\r\n      <img\r\n        src={`https://www.countryflags.io/${stats.CountryCode}/flat/64.png`}\r\n        alt={stats.CountryCode}\r\n      />\r\n      <h2>{stats.Country}</h2>\r\n      <div className=\"describe\">\r\n        <p>{`Active : ${stats.Active}`}</p>\r\n        <p>{`Confirmed : ${stats.Confirmed}`}</p>\r\n        <p>{`Deaths : ${stats.Deaths}`}</p>\r\n        <p>{`Recovered : ${stats.Recovered}`}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Country from '../Country/Country';\r\nimport './countrylist.css';\r\n\r\nexport default function CountryList({ stats }) {\r\n  return (\r\n    <div className=\"countrylist\">\r\n      {stats.map((country) => (\r\n        <Country key={country.CountryCode} stats={country} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './searchbox.css';\r\n\r\nexport default function SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      className=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport CountryList from './components/CountryList/CountryList';\nimport SearchBox from './SearchBox/SearchBox';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [],\n      stats: [],\n      searchField: '',\n    };\n  }\n\n  async componentDidMount() {\n    const resp = await fetch('https://api.covid19api.com/countries');\n    const countries = await resp.json();\n    this.setState({ countries });\n    this.state.countries.map(async (country) => {\n      const resp = await fetch(\n        `https://api.covid19api.com/total/country/${country.Slug}`\n      );\n      const data = await resp.json();\n      if (data.length)\n        this.setState((prevState) => ({\n          stats: prevState.stats.concat({\n            ...data[data.length - 1],\n            CountryCode: country.ISO2,\n          }),\n        }));\n    });\n  }\n\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n\n  render() {\n    const { stats, searchField } = this.state;\n    const filteredCountries = stats.filter((country) =>\n      country.Country.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Covid19 Stats Web App</h1>\n        <SearchBox\n          placeholder=\"Enter Country Name ...\"\n          handleChange={this.handleChange}\n        />\n        <CountryList stats={filteredCountries} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/covid19-cases\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}